/*
Copyright 2021.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	clustergroupupgradesv1alpha1 "github.com/openshift-kni/cluster-group-upgrades-operator/pkg/api/clustergroupupgrades/v1alpha1"
	v1alpha1 "github.com/openshift-kni/lifecycle-agent/api/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ClusterGroupImageBasedUpgradeSpecApplyConfiguration represents an declarative configuration of the ClusterGroupImageBasedUpgradeSpec type for use
// with apply.
type ClusterGroupImageBasedUpgradeSpecApplyConfiguration struct {
	IBUSpec               *v1alpha1.ImageBasedUpgradeSpec                        `json:"ibuSpec,omitempty"`
	ClusterLabelSelectors []v1.LabelSelector                                     `json:"clusterLabelSelectors,omitempty"`
	Actions               []clustergroupupgradesv1alpha1.ImageBasedUpgradeAction `json:"actions,omitempty"`
	RolloutStrategy       *RolloutStrategyApplyConfiguration                     `json:"rolloutStrategy,omitempty"`
}

// ClusterGroupImageBasedUpgradeSpecApplyConfiguration constructs an declarative configuration of the ClusterGroupImageBasedUpgradeSpec type for use with
// apply.
func ClusterGroupImageBasedUpgradeSpec() *ClusterGroupImageBasedUpgradeSpecApplyConfiguration {
	return &ClusterGroupImageBasedUpgradeSpecApplyConfiguration{}
}

// WithIBUSpec sets the IBUSpec field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IBUSpec field is set to the value of the last call.
func (b *ClusterGroupImageBasedUpgradeSpecApplyConfiguration) WithIBUSpec(value v1alpha1.ImageBasedUpgradeSpec) *ClusterGroupImageBasedUpgradeSpecApplyConfiguration {
	b.IBUSpec = &value
	return b
}

// WithClusterLabelSelectors adds the given value to the ClusterLabelSelectors field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the ClusterLabelSelectors field.
func (b *ClusterGroupImageBasedUpgradeSpecApplyConfiguration) WithClusterLabelSelectors(values ...v1.LabelSelector) *ClusterGroupImageBasedUpgradeSpecApplyConfiguration {
	for i := range values {
		b.ClusterLabelSelectors = append(b.ClusterLabelSelectors, values[i])
	}
	return b
}

// WithActions adds the given value to the Actions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Actions field.
func (b *ClusterGroupImageBasedUpgradeSpecApplyConfiguration) WithActions(values ...clustergroupupgradesv1alpha1.ImageBasedUpgradeAction) *ClusterGroupImageBasedUpgradeSpecApplyConfiguration {
	for i := range values {
		b.Actions = append(b.Actions, values[i])
	}
	return b
}

// WithRolloutStrategy sets the RolloutStrategy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RolloutStrategy field is set to the value of the last call.
func (b *ClusterGroupImageBasedUpgradeSpecApplyConfiguration) WithRolloutStrategy(value *RolloutStrategyApplyConfiguration) *ClusterGroupImageBasedUpgradeSpecApplyConfiguration {
	b.RolloutStrategy = value
	return b
}
