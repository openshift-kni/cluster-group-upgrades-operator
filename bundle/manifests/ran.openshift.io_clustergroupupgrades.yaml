apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: clustergroupupgrades.ran.openshift.io
spec:
  group: ran.openshift.io
  names:
    kind: ClusterGroupUpgrade
    listKind: ClusterGroupUpgradeList
    plural: clustergroupupgrades
    shortNames:
    - cgu
    singular: clustergroupupgrade
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[-1:].reason
      name: State
      type: string
    - jsonPath: .status.conditions[-1:].message
      name: Details
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterGroupUpgrade is the Schema for the ClusterGroupUpgrades
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterGroupUpgradeSpec defines the desired state of ClusterGroupUpgrade
            properties:
              actions:
                description: Actions defines the actions to be done either before
                  or after the managedPolicies are remediated
                properties:
                  afterCompletion:
                    description: AfterCompletion defines the actions to be done after
                      upgrade is completed
                    properties:
                      addClusterAnnotations:
                        additionalProperties:
                          type: string
                        description: |-
                          This field defines a map of key/value pairs that identify the cluster annotations
                          to be added or updated to the defined clusters.
                        type: object
                      addClusterLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          This field defines a map of key/value pairs that identify the cluster labels
                          to be added to the defined clusters.
                        type: object
                      deleteClusterLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          This field defines a map of key/value pairs that identify the cluster labels
                          to be deleted for the defined clusters.
                          Deprecated: Use RemoveClusterLabels instead.
                        type: object
                      deleteObjects:
                        default: true
                        description: This field defines whether clean up the resources
                          created for upgrade
                        type: boolean
                      removeClusterAnnotations:
                        description: This field defines a list of annotations to be
                          removed for the defined clusters.
                        items:
                          type: string
                        type: array
                      removeClusterLabels:
                        description: This field defines a list of labels to be removed
                          for the defined clusters.
                        items:
                          type: string
                        type: array
                    type: object
                  beforeEnable:
                    description: BeforeEnable defines the actions to be done before
                      starting upgrade
                    properties:
                      addClusterAnnotations:
                        additionalProperties:
                          type: string
                        description: |-
                          This field defines a map of key/value pairs that identify the cluster annotations
                          to be added or updated to the defined clusters.
                        type: object
                      addClusterLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          This field defines a map of key/value pairs that identify the cluster labels
                          to be added or updated to the defined clusters.
                        type: object
                      deleteClusterLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          This field defines a map of key/value pairs that identify the cluster labels
                          to be deleted for the defined clusters.
                          Deprecated: Use RemoveClusterLabels instead.
                        type: object
                      removeClusterAnnotations:
                        description: This field defines a list of annotations to be
                          removed for the defined clusters.
                        items:
                          type: string
                        type: array
                      removeClusterLabels:
                        description: This field defines a list of labels to be removed
                          for the defined clusters.
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              backup:
                default: false
                description: This field determines whether the cluster would be running
                  a backup prior to the upgrade.
                type: boolean
              batchTimeoutAction:
                description: |-
                  The Batch Timeout Action can be specified to control what happens when a batch times out. The default value is `Continue`.
                  The possible values are:
                    - Continue
                    - Abort
                type: string
              blockingCRs:
                items:
                  description: BlockingCR defines the Upgrade CRs that block the current
                    CR from running if not completed
                  properties:
                    name:
                      type: string
                    namespace:
                      type: string
                  type: object
                type: array
              clusterLabelSelectors:
                description: |-
                  This field holds a list of expressions or labels that will be used to determine what clusters to include in the operation.
                  The expected format is as follows:
                  clusterLabelSelectors:
                    - matchExpressions:
                        - key: label1
                          operator: In
                          values:
                            - value1a
                            - value1b
                    - matchLabels:
                        label2: value2
                    - matchExpressions:
                        - key: label3
                          operator: In
                          values:
                            - value3
                      matchLabels:
                        label4: value4
                items:
                  description: |-
                    A label selector is a label query over a set of resources. The result of matchLabels and
                    matchExpressions are ANDed. An empty label selector matches all objects. A null
                    label selector matches no objects.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              clusterSelector:
                description: |-
                  This field holds a label common to multiple clusters that will be updated.
                  The expected format is as follows:
                  clusterSelector:
                    - label1Name=label1Value
                    - label2Name=label2Value
                  If the value is empty, then the expected format is:
                  clusterSelector:
                    - label1Name
                  All the clusters matching the labels specified in clusterSelector will be included
                  in the update plan.
                  Deprecated: Use ClusterLabelSelectors instead
                items:
                  type: string
                type: array
              clusters:
                items:
                  type: string
                type: array
              enable:
                default: true
                description: |-
                  This field determines when the upgrade starts. While false, the upgrade doesn't start. The policies,
                  placement rules and placement bindings are created, but clusters are not added to the placement rule.
                  Once set to true, the clusters start being upgraded, one batch at a time.
                type: boolean
              managedPolicies:
                items:
                  type: string
                type: array
              manifestWorkTemplates:
                items:
                  type: string
                type: array
              preCaching:
                default: false
                description: |-
                  This field determines whether container image pre-caching will be done on all the clusters
                  matching the selector.
                  If required, the pre-caching process starts immediately on all clusters irrespectively of
                  the value of the "enable" flag
                type: boolean
              preCachingConfigRef:
                description: |-
                  This field specifies a reference to a pre-caching config custom resource that contains the additional
                  pre-caching configurations.
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                type: object
              remediationStrategy:
                description: RemediationStrategySpec defines the remediation policy
                properties:
                  canaries:
                    description: Canaries defines the list of managed clusters that
                      should be remediated first when remediateAction is set to enforce
                    items:
                      type: string
                    type: array
                  maxConcurrency:
                    type: integer
                  timeout:
                    default: 240
                    type: integer
                required:
                - maxConcurrency
                type: object
            required:
            - remediationStrategy
            type: object
          status:
            description: ClusterGroupUpgradeStatus defines the observed state of ClusterGroupUpgrade
            properties:
              backup:
                description: BackupStatus defines the observed backup status
                properties:
                  clusters:
                    items:
                      type: string
                    type: array
                  startedAt:
                    format: date-time
                    type: string
                  status:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              clusters:
                items:
                  description: ClusterState defines the final state of a cluster
                  properties:
                    currentManifestWork:
                      description: ManifestWorkStatus defines the status of a certain
                        ManifestWork
                      properties:
                        name:
                          type: string
                        status:
                          description: |-
                            ManifestResourceStatus represents the status of each resource in manifest work deployed on
                            managed cluster
                          properties:
                            manifests:
                              description: |-
                                Manifests represents the condition of manifests deployed on managed cluster.
                                Valid condition types are:
                                1. Progressing represents the resource is being applied on managed cluster.
                                2. Applied represents the resource is applied successfully on managed cluster.
                                3. Available represents the resource exists on the managed cluster.
                                4. Degraded represents the current state of resource does not match the desired
                                state for a certain period.
                              items:
                                description: |-
                                  ManifestCondition represents the conditions of the resources deployed on a
                                  managed cluster.
                                properties:
                                  conditions:
                                    description: Conditions represents the conditions
                                      of this resource on a managed cluster.
                                    items:
                                      description: "Condition contains details for
                                        one aspect of the current state of this API
                                        Resource.\n---\nThis struct is intended for
                                        direct use as an array at the field path .status.conditions.
                                        \ For example,\n\n\n\ttype FooStatus struct{\n\t
                                        \   // Represents the observations of a foo's
                                        current state.\n\t    // Known .status.conditions.type
                                        are: \"Available\", \"Progressing\", and \"Degraded\"\n\t
                                        \   // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t
                                        \   // +listType=map\n\t    // +listMapKey=type\n\t
                                        \   Conditions []metav1.Condition `json:\"conditions,omitempty\"
                                        patchStrategy:\"merge\" patchMergeKey:\"type\"
                                        protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                                        \   // other fields\n\t}"
                                      properties:
                                        lastTransitionTime:
                                          description: |-
                                            lastTransitionTime is the last time the condition transitioned from one status to another.
                                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                                          format: date-time
                                          type: string
                                        message:
                                          description: |-
                                            message is a human readable message indicating details about the transition.
                                            This may be an empty string.
                                          maxLength: 32768
                                          type: string
                                        observedGeneration:
                                          description: |-
                                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                                            with respect to the current state of the instance.
                                          format: int64
                                          minimum: 0
                                          type: integer
                                        reason:
                                          description: |-
                                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                                            Producers of specific condition types may define expected values and meanings for this field,
                                            and whether the values are considered a guaranteed API.
                                            The value should be a CamelCase string.
                                            This field may not be empty.
                                          maxLength: 1024
                                          minLength: 1
                                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                          type: string
                                        status:
                                          description: status of the condition, one
                                            of True, False, Unknown.
                                          enum:
                                          - "True"
                                          - "False"
                                          - Unknown
                                          type: string
                                        type:
                                          description: |-
                                            type of condition in CamelCase or in foo.example.com/CamelCase.
                                            ---
                                            Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                                            useful (see .node.status.conditions), the ability to deconflict is important.
                                            The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                      required:
                                      - lastTransitionTime
                                      - message
                                      - reason
                                      - status
                                      - type
                                      type: object
                                    type: array
                                  resourceMeta:
                                    description: ResourceMeta represents the group,
                                      version, kind, name and namespace of a resoure.
                                    properties:
                                      group:
                                        description: Group is the API Group of the
                                          Kubernetes resource.
                                        type: string
                                      kind:
                                        description: Kind is the kind of the Kubernetes
                                          resource.
                                        type: string
                                      name:
                                        description: Name is the name of the Kubernetes
                                          resource.
                                        type: string
                                      namespace:
                                        description: Name is the namespace of the
                                          Kubernetes resource.
                                        type: string
                                      ordinal:
                                        description: Ordinal represents the index
                                          of the manifest on spec.
                                        format: int32
                                        type: integer
                                      resource:
                                        description: Resource is the resource name
                                          of the Kubernetes resource.
                                        type: string
                                      version:
                                        description: Version is the version of the
                                          Kubernetes resource.
                                        type: string
                                    type: object
                                  statusFeedback:
                                    description: StatusFeedback represents the values
                                      of the feild synced back defined in statusFeedbacks
                                    properties:
                                      values:
                                        description: Values represents the synced
                                          value of the interested field.
                                        items:
                                          properties:
                                            fieldValue:
                                              description: |-
                                                Value is the value of the status field.
                                                The value of the status field can only be integer, string or boolean.
                                              properties:
                                                boolean:
                                                  description: Boolean is bool value
                                                    when type is boolean.
                                                  type: boolean
                                                integer:
                                                  description: Integer is the integer
                                                    value when type is integer.
                                                  format: int64
                                                  type: integer
                                                jsonRaw:
                                                  description: JsonRaw is a json string
                                                    when type is a list or object
                                                  maxLength: 1024
                                                  type: string
                                                string:
                                                  description: String is the string
                                                    value when type is string.
                                                  type: string
                                                type:
                                                  description: Type represents the
                                                    type of the value, it can be integer,
                                                    string or boolean.
                                                  enum:
                                                  - Integer
                                                  - String
                                                  - Boolean
                                                  - JsonRaw
                                                  type: string
                                              required:
                                              - type
                                              type: object
                                            name:
                                              description: |-
                                                Name represents the alias name for this field. It is the same as what is specified
                                                in StatuFeedbackRule in the spec.
                                              type: string
                                          required:
                                          - fieldValue
                                          - name
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                        - name
                                        x-kubernetes-list-type: map
                                    type: object
                                type: object
                              type: array
                          type: object
                      required:
                      - name
                      type: object
                    currentPolicy:
                      description: PolicyStatus defines the status of a certain policy
                      properties:
                        name:
                          type: string
                        status:
                          type: string
                      required:
                      - name
                      type: object
                    name:
                      type: string
                    state:
                      type: string
                  required:
                  - name
                  - state
                  type: object
                type: array
              computedMaxConcurrency:
                type: integer
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              copiedPolicies:
                description: Deprecated
                items:
                  type: string
                type: array
              managedPoliciesCompliantBeforeUpgrade:
                items:
                  type: string
                type: array
              managedPoliciesContent:
                additionalProperties:
                  type: string
                type: object
              managedPoliciesForUpgrade:
                description: |-
                  Contains the managed policies (and the namespaces) that have NonCompliant clusters
                  that require updating.
                items:
                  description: ManagedPolicyForUpgrade defines the observed state
                    of a Policy
                  properties:
                    name:
                      type: string
                    namespace:
                      type: string
                  type: object
                type: array
              managedPoliciesNs:
                additionalProperties:
                  type: string
                type: object
              placementBindings:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                items:
                  type: string
                type: array
              placementRules:
                items:
                  type: string
                type: array
              precaching:
                description: PrecachingStatus defines the observed pre-caching status
                properties:
                  clusters:
                    items:
                      type: string
                    type: array
                  spec:
                    description: PrecachingSpec defines the pre-caching software spec
                      derived from policies
                    properties:
                      additionalImages:
                        items:
                          type: string
                        type: array
                      excludePrecachePatterns:
                        items:
                          type: string
                        type: array
                      operatorsIndexes:
                        items:
                          type: string
                        type: array
                      operatorsPackagesAndChannels:
                        items:
                          type: string
                        type: array
                      platformImage:
                        type: string
                      spaceRequired:
                        type: string
                    type: object
                  status:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              remediationPlan:
                items:
                  items:
                    type: string
                  type: array
                type: array
              safeResourceNames:
                additionalProperties:
                  type: string
                type: object
              status:
                description: UpgradeStatus defines the observed state of the upgrade
                properties:
                  completedAt:
                    format: date-time
                    type: string
                  currentBatch:
                    type: integer
                  currentBatchRemediationProgress:
                    additionalProperties:
                      description: ClusterRemediationProgress stores the remediation
                        progress of a cluster
                      properties:
                        firstComplaintAt:
                          format: date-time
                          type: string
                        manifestWorkIndex:
                          type: integer
                        policyIndex:
                          type: integer
                        state:
                          description: 'State should be one of the following: NotStarted,
                            InProgress, Completed'
                          type: string
                      type: object
                    type: object
                  currentBatchStartedAt:
                    format: date-time
                    type: string
                  startedAt:
                    format: date-time
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
