#!/bin/bash

cwd="${cwd:-/opt/precache}"
. $cwd/common

podman_pull_path="${podman_pull_path:-/run/containers/0}"
index_download_path="${index_download_path:-/cache/downloaded}"


extract_pull_spec(){
    index_download_path=$1
    operators_spec_file=$2
    pull_spec_file=$3
    /usr/libexec/platform-python /opt/precache/parse_index.py "${index_download_path}" "${operators_spec_file}" "${pull_spec_file}"
    return $?
}

export_index(){
    index=$1
    pull_secret_path=$2
    packages=$3
    image_mount=$4
    
    # copy pull secret to the default runtime dir - opm doesn't accept authfile as an arg
    [ ! -d "$podman_pull_path" ] && mkdir -p "$podman_pull_path"
    cp $pull_secret_path "$podman_pull_path/auth.json"
    capath="/etc/docker/certs.d/${index%/*}/ca.crt"
    # opm doesn't accept cacert as an arg
    if [[ -f "$capath" ]]; then
        cp $capath /etc/pki/ca-trust/source/anchors/ 
        update-ca-trust
    fi
    if [[ -h "$image_mount/bin/opm" ]]; then
        opm_bin=$image_mount$(readlink "$image_mount/bin/opm")
    else
        opm_bin=$image_mount/bin/opm
    fi
    $opm_bin index export -i $index -p $packages -c podman -f $index_download_path
}

extract_packages(){
    local packages
    cat $config_volume_path/operators.packagesAndChannels |tr -d " " > /tmp/packagesAndChannels
    for item in $(sort -u '/tmp/packagesAndChannels'); do
        pkg=$(echo $item |cut -d ':' -f 1)
        packages="$packages$pkg,"
    done
    echo ${packages%,}
    return 0
}

olm_main(){
    declare -i ret_val=0
    if ! [[ -n $(sort -u $config_volume_path/operators.indexes) ]]; then
      log_debug "Operators index is not specified. Operators won't be pre-cached"
      return 0
    fi
    # There could be several indexes, hence the loop
    for index in $(sort -u $config_volume_path/operators.indexes) ; do

        image_id=$(pull_index $index $pull_secret_path)
        rv=$? && ret_val=ret_val+$rv
        [[ $rv -eq 0 ]] || continue
        log_debug "$index image ID is $image_id"
        image_mount=$(mount_index $image_id)
        rv=$? && ret_val=ret_val+$rv
        [[ $rv -eq 0 ]] || continue
        log_debug "Image mount: $image_mount"
        
        packages=$(extract_packages)
        if ! [[ -n $packages ]]; then
          log_debug "Operators index is set, but no packages provided - inconsistent configuration"
          return 1
        fi
        export_index $index $pull_secret_path $packages $image_mount
        operators_spec_file="$config_volume_path/operators.packagesAndChannels"
        extract_pull_spec $index_download_path $operators_spec_file $pull_spec_file
        unmount_index $image_id
    done
    if [[ $ret_val -ne 0 ]]; then
        log_debug "Some of the OLM index extractions failed."
    fi
    return $ret_val
}

if [[ "${BASH_SOURCE[0]}" = "${0}" ]]; then
  olm_main
  exit $?
fi
