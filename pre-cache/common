#!/bin/bash

container_tool="${container_tool:-podman}"
pull_secret_path="${pull_secret_path:-/var/lib/kubelet/config.json}"
pull_spec_file="${pull_spec_file:-/tmp/images.txt}"
config_volume_path="${config_volume_path:-/tmp/precache/config}"
rendered_index_path="${rendered_index_path:-/tmp/index.json}"
additional_images_spec_file="${additional_images_spec_file:-${config_volume_path}/additionalImages}"

max_pull_threads="${MAX_PULL_THREADS:-10}" # number of simultaneous pulls executed can be modified by setting MAX_PULL_THREADS environment variable

# LOGLEVELS: [0]ERROR, [1]INFO, [2]DEBUG
LOGLEVEL=${PRE_CACHE_LOG_LEVEL:-2} # set default log level to DEBUG

_log() {
    local level=$1; shift
    if [[ $level -le $LOGLEVEL ]]; then
        echo "upgrades.pre-cache $(date -Iseconds) $*" >&2
    fi
}

log_error() {
    _log 0 "[ERROR]: $*"
}

log_info() {
    _log 1 "[INFO]: $*"
}

log_debug() {
    _log 2 "[DEBUG]: $*"
}

pull_index(){
    local index_pull_spec=$1
    local pull_secret_path=$2
    # Pull the image into the cache directory and attain the image ID
    release_index_id=$($container_tool pull --quiet  $index_pull_spec --authfile=$pull_secret_path)
    [[ $? -eq 0 ]] || return 1
    echo $release_index_id
    return 0
}

mount_index(){
    local image_id=$1
    local image_mount=$($container_tool image mount $image_id)
    rv=$?
    echo $image_mount
    return $rv
}

unmount_index(){
    local image_id=$1
    local result=$($container_tool image unmount $image_id)
    rv=$?
    echo $result
    return $rv
}
