---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/openshift-kni/cluster-group-upgrades-operator?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: |
      event == "pull_request" &&
      target_branch == "main" && 
      (
        '.tekton/build-pipeline.yaml'.pathChanged() ||
        '.konflux/konflux_build_args.conf'.pathChanged() ||
        'config/***'.pathChanged() ||
        'hack/***'.pathChanged() ||
        'pkg/***'.pathChanged() ||
        'recovery/***'.pathChanged() ||
        'vendor/***'.pathChanged() ||
        'go.mod'.pathChanged() ||
        'go.sum'.pathChanged() ||
        '.tekton/topology-aware-lifecycle-manager-recovery-4-20-pull-request.yaml'.pathChanged() ||
        'Dockerfile.recovery'.pathChanged()
      )
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: topology-aware-lifecycle-manager-4-20
    appstudio.openshift.io/component: topology-aware-lifecycle-manager-recovery-4-20
    pipelines.appstudio.openshift.io/type: build
  name: topology-aware-lifecycle-manager-recovery-4-20-on-pull-request
  namespace: telco-5g-tenant
spec:
  params:
    - name: git-url
      value: '{{source_url}}'
    - name: revision
      value: '{{revision}}'
    - name: output-image
      value: quay.io/redhat-user-workloads/telco-5g-tenant/topology-aware-lifecycle-manager-recovery-4-20:on-pr-{{revision}}
    - name: image-expires-after
      value: 5d
    - name: build-platforms
      value:
        - linux/x86_64
    - name: dockerfile
      value: Dockerfile.recovery
    - name: build-args-file
      value: .konflux/konflux_build_args.conf
    - name: hermetic
      value: "true"
    - name: prefetch-input
      value: gomod
    - name: build-source-image
      value: "true"
  pipelineRef:
    name: build-pipeline
  taskRunTemplate: {}
  workspaces:
    - name: git-auth
      secret:
        secretName: '{{ git_auth_secret }}'
status: {}
